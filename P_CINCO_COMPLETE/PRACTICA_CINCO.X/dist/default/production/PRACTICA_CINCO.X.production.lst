

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Mar 08 04:54:12 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.40
    16                           ; Generated 17/11/2021 GMT
    17                           ; 
    18                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206                           
   207                           	psect	idataCOMMON
   208  077D                     __pidataCOMMON:
   209                           
   210                           ;initializer for _tabla
   211  077D  3477               	retlw	119
   212  077E  3441               	retlw	65
   213  077F  343B               	retlw	59
   214  0780  346B               	retlw	107
   215  0781  344D               	retlw	77
   216  0782  346E               	retlw	110
   217  0783  347E               	retlw	126
   218  0784  3443               	retlw	67
   219  0785  347F               	retlw	127
   220  0786  346F               	retlw	111
   221                           
   222                           	psect	nvCOMMON
   223  007D                     __pnvCOMMON:
   224  007D                     _cuenta:
   225  007D                     	ds	1
   226  0006                     _PORTB	set	6
   227  0086                     _TRISB	set	134
   228                           
   229                           	psect	cinit
   230  07C0                     start_initialization:	
   231                           ; #config settings
   232                           
   233  07C0                     __initialization:
   234                           
   235                           ; Initialize objects allocated to COMMON
   236  07C0  120A  118A  277D  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   237  07C5  00F0               	movwf	__pdataCOMMON& (0+127)
   238  07C6  120A  118A  277E  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   239  07CB  00F1               	movwf	(__pdataCOMMON+1)& (0+127)
   240  07CC  120A  118A  277F  120A  118A  	fcall	__pidataCOMMON+2	;fetch initializer
   241  07D1  00F2               	movwf	(__pdataCOMMON+2)& (0+127)
   242  07D2  120A  118A  2780  120A  118A  	fcall	__pidataCOMMON+3	;fetch initializer
   243  07D7  00F3               	movwf	(__pdataCOMMON+3)& (0+127)
   244  07D8  120A  118A  2781  120A  118A  	fcall	__pidataCOMMON+4	;fetch initializer
   245  07DD  00F4               	movwf	(__pdataCOMMON+4)& (0+127)
   246  07DE  120A  118A  2782  120A  118A  	fcall	__pidataCOMMON+5	;fetch initializer
   247  07E3  00F5               	movwf	(__pdataCOMMON+5)& (0+127)
   248  07E4  120A  118A  2783  120A  118A  	fcall	__pidataCOMMON+6	;fetch initializer
   249  07E9  00F6               	movwf	(__pdataCOMMON+6)& (0+127)
   250  07EA  120A  118A  2784  120A  118A  	fcall	__pidataCOMMON+7	;fetch initializer
   251  07EF  00F7               	movwf	(__pdataCOMMON+7)& (0+127)
   252  07F0  120A  118A  2785  120A  118A  	fcall	__pidataCOMMON+8	;fetch initializer
   253  07F5  00F8               	movwf	(__pdataCOMMON+8)& (0+127)
   254  07F6  120A  118A  2786  120A  118A  	fcall	__pidataCOMMON+9	;fetch initializer
   255  07FB  00F9               	movwf	(__pdataCOMMON+9)& (0+127)
   256  07FC                     end_of_initialization:	
   257                           ;End of C runtime variable initialization code
   258                           
   259  07FC                     __end_of__initialization:
   260  07FC  0183               	clrf	3
   261  07FD  120A  118A  2F9A   	ljmp	_main	;jump to C main() function
   262                           
   263                           	psect	dataCOMMON
   264  0070                     __pdataCOMMON:
   265  0070                     _tabla:
   266  0070                     	ds	10
   267                           
   268                           	psect	inittext
   269  0787                     init_fetch0:	
   270                           ;	Called with low address in FSR and high address in W
   271                           
   272  0787  087E               	movf	btemp,w
   273  0788  008A               	movwf	10
   274  0789  087F               	movf	btemp+1,w
   275  078A  0082               	movwf	2
   276  078B                     init_ram0:	
   277                           ;Called with:
   278                           ;	high address of idata address in btemp 
   279                           ;	low address of idata address in btemp+1 
   280                           ;	low address of data in FSR
   281                           ;	high address + 1 of data in btemp-1
   282                           
   283  078B  120A  118A  2787  120A  118A  	fcall	init_fetch0
   284  0790  0080               	movwf	0
   285  0791  0A84               	incf	4,f
   286  0792  0804               	movf	4,w
   287  0793  067D               	xorwf	btemp+-1,w
   288  0794  1903               	btfsc	3,2
   289  0795  3400               	retlw	0
   290  0796  0AFF               	incf	btemp+1,f
   291  0797  1903               	btfsc	3,2
   292  0798  0AFE               	incf	btemp,f
   293  0799  2F8B               	goto	init_ram0
   294                           
   295                           	psect	cstackCOMMON
   296  007A                     __pcstackCOMMON:
   297  007A                     ?_main:
   298  007A                     ??_main:	
   299                           ; 1 bytes @ 0x0
   300                           
   301                           
   302                           ; 1 bytes @ 0x0
   303  007A                     	ds	3
   304                           
   305                           	psect	maintext
   306  079A                     __pmaintext:	
   307 ;;
   308 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   309 ;;
   310 ;; *************** function _main *****************
   311 ;; Defined at:
   312 ;;		line 26 in file "practica_p_cinco.c"
   313 ;; Parameters:    Size  Location     Type
   314 ;;		None
   315 ;; Auto vars:     Size  Location     Type
   316 ;;		None
   317 ;; Return value:  Size  Location     Type
   318 ;;                  1    wreg      void 
   319 ;; Registers used:
   320 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   321 ;; Tracked objects:
   322 ;;		On entry : B00/0
   323 ;;		On exit  : 0/0
   324 ;;		Unchanged: 0/0
   325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   326 ;;      Params:         0       0       0       0       0
   327 ;;      Locals:         0       0       0       0       0
   328 ;;      Temps:          3       0       0       0       0
   329 ;;      Totals:         3       0       0       0       0
   330 ;;Total ram usage:        3 bytes
   331 ;; This function calls:
   332 ;;		Nothing
   333 ;; This function is called by:
   334 ;;		Startup code after reset
   335 ;; This function uses a non-reentrant model
   336 ;;
   337                           
   338  079A                     _main:	
   339                           ;psect for function _main
   340                           
   341  079A                     l612:	
   342                           ;incstack = 0
   343                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0]
   344                           
   345                           
   346                           ;practica_p_cinco.c: 27:     TRISB = 0x00;
   347  079A  1683               	bsf	3,5	;RP0=1, select bank1
   348  079B  1303               	bcf	3,6	;RP1=0, select bank1
   349  079C  0186               	clrf	6	;volatile
   350  079D                     l15:	
   351                           ;practica_p_cinco.c: 28:     while(1){
   352                           
   353                           
   354                           ;practica_p_cinco.c: 29:         for(cuenta = 0; cuenta!= 10; cuenta++){
   355  079D  01FD               	clrf	_cuenta
   356  079E                     l618:
   357                           
   358                           ;practica_p_cinco.c: 30:             PORTB = tabla[cuenta];
   359  079E  087D               	movf	_cuenta,w
   360  079F  3E70               	addlw	(low (_tabla| 0))& (0+255)
   361  07A0  0084               	movwf	4
   362  07A1  0800               	movf	0,w
   363  07A2  1283               	bcf	3,5	;RP0=0, select bank0
   364  07A3  1303               	bcf	3,6	;RP1=0, select bank0
   365  07A4  0086               	movwf	6	;volatile
   366  07A5                     l620:
   367                           
   368                           ;practica_p_cinco.c: 31:             _delay((unsigned long)((500)*(4000000/4000.0)));
   369  07A5  3003               	movlw	3
   370  07A6  00FC               	movwf	??_main+2
   371  07A7  308A               	movlw	138
   372  07A8  00FB               	movwf	??_main+1
   373  07A9  3055               	movlw	85
   374  07AA  00FA               	movwf	??_main
   375  07AB                     u27:
   376  07AB  0BFA               	decfsz	??_main,f
   377  07AC  2FAB               	goto	u27
   378  07AD  0BFB               	decfsz	??_main+1,f
   379  07AE  2FAB               	goto	u27
   380  07AF  0BFC               	decfsz	??_main+2,f
   381  07B0  2FAB               	goto	u27
   382  07B1  2FB2               	nop2
   383  07B2                     l622:
   384                           
   385                           ;practica_p_cinco.c: 32:         }
   386  07B2  3001               	movlw	1
   387  07B3  00FA               	movwf	??_main
   388  07B4  087A               	movf	??_main,w
   389  07B5  07FD               	addwf	_cuenta,f
   390  07B6                     l624:
   391  07B6  300A               	movlw	10
   392  07B7  067D               	xorwf	_cuenta,w
   393  07B8  1D03               	btfss	3,2
   394  07B9  2FBB               	goto	u11
   395  07BA  2FBC               	goto	u10
   396  07BB                     u11:
   397  07BB  2F9E               	goto	l618
   398  07BC                     u10:
   399  07BC  2F9D               	goto	l15
   400  07BD  120A  118A  2800   	ljmp	start
   401  07C0                     __end_of_main:
   402  007E                     btemp	set	126	;btemp
   403  007E                     wtemp0	set	126
   404                           
   405                           	psect	idloc
   406                           
   407                           ;Config register IDLOC0 @ 0x2000
   408                           ;	unspecified, using default values
   409  2000                     	org	8192
   410  2000  3FFF               	dw	16383
   411                           
   412                           ;Config register IDLOC1 @ 0x2001
   413                           ;	unspecified, using default values
   414  2001                     	org	8193
   415  2001  3FFF               	dw	16383
   416                           
   417                           ;Config register IDLOC2 @ 0x2002
   418                           ;	unspecified, using default values
   419  2002                     	org	8194
   420  2002  3FFF               	dw	16383
   421                           
   422                           ;Config register IDLOC3 @ 0x2003
   423                           ;	unspecified, using default values
   424  2003                     	org	8195
   425  2003  3FFF               	dw	16383
   426                           
   427                           	psect	config
   428                           
   429                           ;Config register CONFIG1 @ 0x2007
   430                           ;	Oscillator Selection bits
   431                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
   432                           ;	Watchdog Timer Enable bit
   433                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   434                           ;	Power-up Timer Enable bit
   435                           ;	PWRTE = OFF, PWRT disabled
   436                           ;	RE3/MCLR pin function select bit
   437                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   438                           ;	Code Protection bit
   439                           ;	CP = OFF, Program memory code protection is disabled
   440                           ;	Data Code Protection bit
   441                           ;	CPD = OFF, Data memory code protection is disabled
   442                           ;	Brown Out Reset Selection bits
   443                           ;	BOREN = ON, BOR enabled
   444                           ;	Internal External Switchover bit
   445                           ;	IESO = ON, Internal/External Switchover mode is enabled
   446                           ;	Fail-Safe Clock Monitor Enabled bit
   447                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
   448                           ;	Low Voltage Programming Enable bit
   449                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   450                           ;	In-Circuit Debugger Mode bit
   451                           ;	DEBUG = 0x1, unprogrammed default
   452  2007                     	org	8199
   453  2007  2FF2               	dw	12274
   454                           
   455                           ;Config register CONFIG2 @ 0x2008
   456                           ;	Brown-out Reset Selection bit
   457                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   458                           ;	Flash Program Memory Self Write Enable bits
   459                           ;	WRT = OFF, Write protection off
   460  2008                     	org	8200
   461  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3      14
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      3       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       E      12        0.0%
ABS                  0      0       E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Mar 08 04:54:12 2022

                      pc 0002                       l15 079D                       u10 07BC  
                     u11 07BB                       u27 07AB                       fsr 0004  
                    l620 07A5                      l612 079A                      l622 07B2  
                    l624 07B6                      l618 079E                      fsr0 0004  
                    indf 0000                     _main 079A                     btemp 007E  
                   start 0000                    ?_main 007A                    _PORTB 0006  
                  _TRISB 0086                    _tabla 0070                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07C0  
           __end_of_main 07C0                   ??_main 007A                   _cuenta 007D  
           __pdataCOMMON 0070  __end_of__initialization 07FC           __pcstackCOMMON 007A  
             __pnvCOMMON 007D               __pmaintext 079A     end_of_initialization 07FC  
          __pidataCOMMON 077D      start_initialization 07C0               init_fetch0 0787  
              ___latbits 0002                 init_ram0 078B  
